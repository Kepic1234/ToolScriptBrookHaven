--Made By Ev4n33
local ScreenGui = Instance.new("ScreenGui")
local main = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local deletegui = Instance.new("TextButton")
local IceHub = Instance.new("TextButton")
local fatesadmin = Instance.new("TextButton")
local kickplayer = Instance.new("TextButton")
local emoteGUI = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")

ScreenGui.Parent = game.CoreGui

main.Name = "main"
main.Parent = ScreenGui
main.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
main.Position = UDim2.new(0.0909311995, 0, 0.594017088, 0)
main.Size = UDim2.new(0, 454, 0, 330)
main.Visible = true
main.Active = true 
main.Draggable = true

TextLabel.Parent = main
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 85, 0)
TextLabel.Size = UDim2.new(0, 454, 0, 50)
TextLabel.Font = Enum.Font.Creepster
TextLabel.Text = "TesT GUI"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

deletegui.Name = "delete gui"
deletegui.Parent = main
deletegui.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
deletegui.Position = UDim2.new(0.845815003, 0, 0, 0)
deletegui.Size = UDim2.new(0, 70, 0, 50)
deletegui.Font = Enum.Font.Gotham
deletegui.Text = "CLOSE"
deletegui.TextColor3 = Color3.fromRGB(0, 0, 0)
deletegui.TextSize = 14.000
deletegui.Active = true
deletegui.Draggable = true
deletegui.MouseButton1Down:Connect(function()
	ScreenGui:Destroy()
end)


IceHub.Name = "IceHub"
IceHub.Parent = main
IceHub.BackgroundColor3 = Color3.fromRGB(255, 85, 0)
IceHub.Position = UDim2.new(0.0660792962, 0, 0.327272713, 0)
IceHub.Size = UDim2.new(0, 142, 0, 60)
IceHub.Font = Enum.Font.Gotham
IceHub.Text = "IceHub"
IceHub.TextColor3 = Color3.fromRGB(0, 0, 0)
IceHub.TextSize = 14.000
IceHub.MouseButton1Down:connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/IceMael7/NewIceHub/main/Brookhaven"))()
end)

fatesadmin.Name = "fatesadmin"
fatesadmin.Parent = main
fatesadmin.BackgroundColor3 = Color3.fromRGB(255, 85, 0)
fatesadmin.Position = UDim2.new(0.621145368, 0, 0.327272713, 0)
fatesadmin.Size = UDim2.new(0, 142, 0, 60)
fatesadmin.Font = Enum.Font.Gotham
fatesadmin.Text = "Infinitie Yield"
fatesadmin.TextColor3 = Color3.fromRGB(0, 0, 0)
fatesadmin.TextSize = 14.000
fatesadmin.MouseButton1Down:connect(function()
	loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)

kickplayer.Name = "kick player"
kickplayer.Parent = main
kickplayer.BackgroundColor3 = Color3.fromRGB(255, 85, 0)
kickplayer.Position = UDim2.new(0.0660792962, 0, 0.712121189, 0)
kickplayer.Size = UDim2.new(0, 142, 0, 60)
kickplayer.Font = Enum.Font.Gotham
kickplayer.Text = "Kick Player"
kickplayer.TextColor3 = Color3.fromRGB(0, 0, 0)
kickplayer.TextSize = 14.000
kickplayer.MouseButton1Down:connect(function()
	local Players = game.Players
	Players.PlayerRemoving:Connect(function(player)
		-- Script generated by SimpleSpy - credits to exx#9394

		local args = {
			[1] = ":kick "..player.Name,
			[2] = "All"
		}

		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
		-- Script generated by SimpleSpy - credits to exx#9394

		local args = {
			[1] = "Player "..player.Name.. " has been kicked!",
			[2] = "All"
		}

		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
	end)
	print[[Made by Tescalus don't believe anyone who tells you otherwise!]]
end)

emoteGUI.Name = "emote GUI"
emoteGUI.Parent = main
emoteGUI.BackgroundColor3 = Color3.fromRGB(255, 85, 0)
emoteGUI.Position = UDim2.new(0.614537418, 0, 0.712121189, 0)
emoteGUI.Size = UDim2.new(0, 148, 0, 60)
emoteGUI.Font = Enum.Font.Gotham
emoteGUI.Text = "Emote GUI"
emoteGUI.TextColor3 = Color3.fromRGB(0, 0, 0)
emoteGUI.TextSize = 14.000
emoteGUI.MouseButton1Down:connect(function()
	local httpService = game:GetService('HttpService')
	local categories = game:HttpGet('https://catalog.roblox.com/v1/categories')
	local animationCategory = httpService:JSONDecode(categories).AvatarAnimations
	local subCategory = game:HttpGet('https://catalog.roblox.com/v1/subcategories')
	local emoteCategory = httpService:JSONDecode(subCategory).EmoteAnimations

	local emotesTable = {}
	local cursor = ''
	local animsTable = httpService:JSONDecode(game:HttpGet('https://pastebin.com/raw/XppaAPF7'))

	local animsTableNames = {}
	for name in pairs(animsTable) do
		table.insert(animsTableNames, name)
	end

	while true do
		local requestString = ('https://catalog.roblox.com/v1/search/items/details?Category=%s&Subcategory=%s&IncludeNotForSale=true&Limit=30&Cursor=%s'):format(
		animationCategory, emoteCategory, cursor
		)
		local response = httpService:JSONDecode(game:HttpGet(requestString))
		cursor = response.nextPageCursor

		for _, data in ipairs(response.data) do
			table.insert(emotesTable, {
				data.name,
				data.id
			})
		end

		if not cursor then
			break
		end
	end

	table.sort(emotesTable, function(a, b)
		return a[1] < b[1]
	end)

	table.sort(animsTableNames)

	local robloxEmotes = {}
	local emoteNames = {}

	for _, emote in ipairs(emotesTable) do
		table.insert(emoteNames, emote[1])
		robloxEmotes[emote[1]] = { emote[2] }
	end

	local library = loadstring(game:HttpGet('https://raw.githubusercontent.com/Vzurxy/Scripts/main/uwuware_ui.lua'))()
	local plr = game:GetService('Players').LocalPlayer
	local character = plr.Character
	local humanoid = character:WaitForChild('Humanoid', 5) or character:FindFirstChildWhichIsA('Humanoid')
	local currentEmotes = {}
	local selectedEmotes = currentEmotes

	if not humanoid then
		return
	end

	local function updateCurrentEmotes()
		local description = humanoid.HumanoidDescription
		local emotes = description:GetEquippedEmotes()

		currentEmotes = {}
		selectedEmotes = {}

		for _, data in ipairs(emotes) do
			table.insert(currentEmotes, data.Name)
		end

		humanoid.HumanoidDescription:SetEmotes(robloxEmotes)

		local existsSave, saveConfig = pcall(readfile, 'animations-config.json')

		if existsSave then
			saveConfig = httpService:JSONDecode(saveConfig)
			currentEmotes = saveConfig
			selectedEmotes = saveConfig
		else
			selectedEmotes = currentEmotes
		end
	end

	local function updateAnimations()
		local animation = animsTable[library.flags.anim]
		local animate = character:WaitForChild('Animate', 5) or character:FindFirstChild('Animate', true)

		if not animate then return end

		local swimIdle = false

		for anim, data in pairs(animation) do
			for idx, id in ipairs(data) do
				local obj = animate:WaitForChild(anim, 5)
				if not obj then return end
				if anim == 'idle' then
					obj:WaitForChild('Animation' .. idx).AnimationId = id
				elseif anim == 'swim' then
					if not swimIdle then
						obj:WaitForChild('Swim').AnimationId = id
						swimIdle = true
					else
						animate:WaitForChild('swimidle').SwimIdle.AnimationId = id
					end
				else
					local parsed = anim:gsub('^.', anim.upper)
					obj:WaitForChild(parsed .. 'Anim').AnimationId = id
				end
			end
		end
	end

	pcall(updateCurrentEmotes)

	plr.CharacterAdded:Connect(function(newCharacter)
		character = newCharacter
		humanoid = newCharacter:WaitForChild('Humanoid', 5) or newCharacter:FindFirstChildWhichIsA('Humanoid')

		humanoid.HumanoidDescription:SetEmotes(robloxEmotes)
		humanoid.HumanoidDescription:SetEquippedEmotes(selectedEmotes)

		pcall(updateAnimations)
	end)

	local window = library:CreateWindow('Roblox Emotes') do
		local emotes = window:AddFolder('Emotes') do
			for number = 1, 8 do
				emotes:AddList({
					text = ('Emote %s'):format(number),
					flag = ('emote%s'):format(number),
					value = currentEmotes[number],
					values = emoteNames,
					callback = function(selectedEmote)
						selectedEmotes[number] = selectedEmote
					end
				})
			end
			emotes:AddButton({
				text = 'Apply Emotes',
				flag = 'emote',
				callback = function()
					humanoid.HumanoidDescription:SetEquippedEmotes(selectedEmotes)
				end
			})
		end
		local animations = window:AddFolder('Animations') do
			local defaultValue = 'Mocap' do
				local animate = character:WaitForChild('Animate', 5) or character:FindFirstChild('Animate', true)
				if not animate then return end
				local walkAnim = animate:FindFirstChild('WalkAnim', true)

				if walkAnim then
					local assetInfo = game:GetService('MarketplaceService'):GetProductInfo(walkAnim.AnimationId:match('%d+'))
					defaultValue = assetInfo.Name:split(' ')[1]
				end
			end

			animations:AddList({
				text = 'Character Animation',
				flag = 'anim',
				value = 'Mocap',
				values = animsTableNames
			})
			animations:AddButton({
				text = 'Apply Animation',
				flag = 'animapply',
				callback = function()
					pcall(updateAnimations)
				end
			})
		end

		local saving = window:AddFolder('Saving') do
			saving:AddButton({
				text = 'Save Config',
				flag = 'configbtn',
				callback = function()
					local saveConfig = httpService:JSONEncode(selectedEmotes)
					writefile('animations-config.json', saveConfig)
				end
			})
		end
	end

	library:Init()
end)

TextLabel_2.Parent = main
TextLabel_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.Position = UDim2.new(0, 0, 0.151515156, 0)
TextLabel_2.Size = UDim2.new(0, 454, 0, 44)
TextLabel_2.Font = Enum.Font.Gotham
TextLabel_2.Text = "Made by Ev4n33"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextSize = 14.000
